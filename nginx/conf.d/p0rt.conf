# Default server block for handling direct IP access
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    
    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}

# SSL default server
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name _;
    
    # Self-signed certificate for default server
    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;
    
    # Return 444 (no response) for direct IP access
    return 444;
}

# Main P0rt domain
server {
    listen 80;
    listen [::]:80;
    server_name p0rt.xyz www.p0rt.xyz;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main P0rt HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name p0rt.xyz www.p0rt.xyz;
    
    # SSL certificates (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/p0rt.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/p0rt.xyz/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/p0rt.xyz/chain.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    limit_req zone=general burst=50 nodelay;
    limit_conn addr 50;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Proxy to P0rt backend
    location / {
        proxy_pass http://p0rt_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable buffering for streaming
        proxy_buffering off;
        proxy_request_buffering off;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# Wildcard subdomains for tunnels
server {
    listen 80;
    listen [::]:80;
    server_name *.p0rt.xyz;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Wildcard HTTPS for tunnels
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name *.p0rt.xyz;
    
    # SSL wildcard certificate
    ssl_certificate /etc/letsencrypt/live/p0rt.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/p0rt.xyz/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/p0rt.xyz/chain.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting per subdomain
    limit_req zone=tunnel burst=20 nodelay;
    limit_req zone=perdomain burst=200 nodelay;
    limit_conn addr 100;
    limit_conn domain 500;
    
    # Client body size (for uploads)
    client_max_body_size 100M;
    client_body_timeout 120s;
    
    # Proxy to P0rt backend
    location / {
        proxy_pass http://p0rt_backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Extended timeouts for tunnels
        proxy_connect_timeout 120s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Disable buffering for real-time communication
        proxy_buffering off;
        proxy_request_buffering off;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Handle connection errors gracefully
        proxy_next_upstream off;
        proxy_intercept_errors off;
    }
}